import{j as a}from"./clsx-36b9529f.js";import{G as c}from"./global-variants-893e06e6.js";import{H as f}from"./HeaderShortComponent-5b7c16b8.js";import{R as g}from"./RichText-c8ddb0e0.js";import{L as x}from"./Layout-639d4783.js";import{a as y}from"./mocks-dd8b5ca4.js";import"./index-8b3efc3f.js";import"./_commonjsHelpers-de833af9.js";import"./index-9eff14f9.js";import"./moving-forward-arrow-a1f6b1da.js";import"./index.es16-2a5abf3b.js";import"./index.es32-95f1013f.js";import"./index.es13-b5ad88d4.js";import"./index.es17-40e95622.js";import"./index.es18-9e36226e.js";import"./getUrlWithTrailingSlash-9d839ee0.js";const t=({content:r,variant:n=c.Zps,headline:l,appStoreUrl:p,googlePlayUrl:m,id:u,...d})=>a.jsxs(x,{id:u,className:"zep-flex md:zep-flex-row zep-flex-col zep-items-start zep-gap-2 sm:zep-gap-2.5 md:zep-gap-1.5 xl:zep-gap-5",children:[l&&a.jsx(f,{variant:n,headline:l,className:"zep-w-full",...d}),a.jsx(g,{content:r,variant:n,appStoreUrl:p,googlePlayUrl:m})]});try{t.displayName="RichTextPattern",t.__docgenInfo={description:"",displayName:"RichTextPattern",props:{variant:{defaultValue:{value:"GlobalVariants.Zps"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"ZPS"'},{value:'"CAT"'}]}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},content:{defaultValue:null,description:"",name:"content",required:!0,type:{name:"BlocksContent"}},appStoreUrl:{defaultValue:null,description:"",name:"appStoreUrl",required:!1,type:{name:"string"}},googlePlayUrl:{defaultValue:null,description:"",name:"googlePlayUrl",required:!1,type:{name:"string"}},headline:{defaultValue:null,description:"",name:"headline",required:!1,type:{name:"string"}},tagline:{defaultValue:null,description:"",name:"tagline",required:!1,type:{name:"string"}},showArrow:{defaultValue:null,description:"",name:"showArrow",required:!1,type:{name:"boolean"}}}}}catch{}const k={title:"Patterns/RichTextPattern",component:t,tags:["autodocs"],argTypes:{}},e={args:{content:y,headline:"Headline",tagline:"Tagline"}};var o,i,s;e.parameters={...e.parameters,docs:{...(o=e.parameters)==null?void 0:o.docs,source:{originalSource:`{
  args: {
    content: mockRichText,
    headline: 'Headline',
    tagline: 'Tagline'
  } as RichTextPatternProps
}`,...(s=(i=e.parameters)==null?void 0:i.docs)==null?void 0:s.source}}};const A=["Default"];export{e as Default,A as __namedExportsOrder,k as default};
